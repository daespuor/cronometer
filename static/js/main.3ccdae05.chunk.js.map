{"version":3,"sources":["utils.js","cronometer/cronometer.component.js","index.js","cronometer/cronometer.hooks.js"],"names":["addSeconds","time","sec","min","hours","formatTime","concat","Cronometer","props","react_default","a","createElement","className","id","value","ReactDOM","render","_useState","useState","_useState2","Object","slicedToArray","setTime","savedCallback","callback","useRef","useEffect","current","useCurrentCallback","newtime","interval","handlePlay","setInterval","handleStop","ev","clearInterval","handlePause","play","document","getElementById","addEventListener","stop","pause","removeEventListener","useEventListeners"],"mappings":"8NAAcA,EAAW,SAACC,GAWtB,OAVAA,EAAKC,MACFD,EAAKC,KAAK,KACTD,EAAKC,IAAI,EACTD,EAAKE,OAENF,EAAKE,KAAK,KACTF,EAAKE,IAAI,EACTF,EAAKG,SAGFH,GAGEI,EAAW,SAACJ,GACrB,OAAOA,EAAK,GAAL,IAAAK,OAAYL,GAAOA,SCZf,SAASM,EAAWC,GAC/B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UAAQE,GAAG,QAAOJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAC/BH,EAAAC,EAAAC,cAAA,UAAQE,GAAG,SAAQJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAChCH,EAAAC,EAAAC,cAAA,UAAQE,GAAG,QAAOJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAEnCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACVJ,EAAMM,QCPvBC,IAASC,OAAOP,EAAAC,EAAAC,cCAD,SAAoBH,GAC/B,IAAIP,EASR,WAA4B,IAAAgB,EACLC,mBAAS,CACpBhB,IAAI,EACJC,IAAI,EACJC,MAAM,IAJUe,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACnBhB,EADmBkB,EAAA,GACdG,EADcH,EAAA,GAMpBI,EAkDR,SAA4BC,GACxB,IAAID,EAAcE,mBAKlB,OAJAC,oBAAU,WACNH,EAAcI,QAAQH,IAGnBD,EAxDWK,CAAmB,WACjC,IAAMC,EAAQ7B,EAAWC,GACzBqB,EAAQ,CACJpB,IAAI2B,EAAQ3B,IACZC,IAAI0B,EAAQ1B,IACZC,MAAMyB,EAAQzB,UAGlB0B,EAAS,KAeb,SAASC,IACS,OAAXD,IACCA,EAASE,YAAY,kBAAIT,EAAcI,WAAU,MAGzD,SAASM,EAAWC,GACF,OAAXJ,IACCK,cAAcL,GACdR,EACI,CACIpB,IAAI,EACJC,IAAI,EACJC,MAAM,IAGd0B,EAAS,MAGjB,SAASM,EAAYF,GACH,OAAXJ,IACCK,cAAcL,GACdA,EAAS,MAGjB,OAtCAJ,oBAAU,WACN,IAAMW,EAAKC,SAASC,eAAe,QACnCF,EAAKG,iBAAiB,QAAQT,GAC9B,IAAMU,EAAKH,SAASC,eAAe,QACnCE,EAAKD,iBAAiB,QAAQP,GAC9B,IAAMS,EAAMJ,SAASC,eAAe,SAEpC,OADAG,EAAMF,iBAAiB,QAAQJ,GACxB,WACHD,cAAcL,GACdO,EAAKM,oBAAoB,QAAQZ,GACjCU,EAAKE,oBAAoB,QAAQV,GACjCS,EAAMC,oBAAoB,QAAQP,KAExC,IAyBKnC,EA9DE2C,GACH9B,EAAK,GAAAR,OAAID,EAAWJ,EAAKG,OAApB,KAAAE,OAA8BD,EAAWJ,EAAKE,KAA9C,KAAAG,OAAsDD,EAAWJ,EAAKC,MACjF,OACQO,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACJ,EAAD,CAAqBO,MAAOA,MDL5B,MAAgBwB,SAASC,eAAe","file":"static/js/main.3ccdae05.chunk.js","sourcesContent":["export const  addSeconds=(time)=>{\r\n    time.sec++;\r\n    if(time.sec>=60){\r\n        time.sec=0;\r\n        time.min++;\r\n    }\r\n    if(time.min>=60){\r\n        time.min=0;\r\n        time.hours++;\r\n    }\r\n\r\n    return time;\r\n}\r\n\r\nexport const formatTime=(time)=>{\r\n    return time<10?`0${time}`:time;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './cronometer.css';\r\nexport default function Cronometer(props) {\r\n    return (\r\n        <div className=\"Cronometer\">\r\n            <div className=\"Cronometer-Buttons\">\r\n                <button id=\"play\"><i className=\"fas fa-play\"></i></button>\r\n                <button id=\"pause\"><i className=\"fas fa-pause\"></i></button>\r\n                <button id=\"stop\"><i className=\"fas fa-stop\"></i></button>\r\n            </div>\r\n            <div className=\"Cronometer-Value\">\r\n                {props.value}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCronometer.propTypes={\r\n    value:PropTypes.string.isRequired\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Cronometer from './cronometer/cronometer.hooks';\r\n\r\nReactDOM.render(<Cronometer />, document.getElementById('root'));","import React,{useState,useEffect,useRef} from 'react';\r\nimport {addSeconds,formatTime} from '../utils';\r\nimport CronometerComponent from './cronometer.component';\r\n\r\n\r\nexport default function Cronometer(props){\r\n    let time=useEventListeners();\r\n    const value=`${formatTime(time.hours)}:${formatTime(time.min)}:${formatTime(time.sec)}`;\r\n    return(\r\n            <div>\r\n                <CronometerComponent value={value}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nfunction useEventListeners(){\r\n    let [time,setTime]=useState({\r\n            sec:0,\r\n            min:0,\r\n            hours:0\r\n    });\r\n    let savedCallback=useCurrentCallback(()=>{\r\n        const newtime=addSeconds(time);\r\n        setTime({\r\n            sec:newtime.sec,\r\n            min:newtime.min,\r\n            hours:newtime.hours\r\n        })\r\n    });\r\n    let interval=null;\r\n    useEffect(()=>{\r\n        const play=document.getElementById('play');\r\n        play.addEventListener('click',handlePlay);\r\n        const stop=document.getElementById('stop');\r\n        stop.addEventListener('click',handleStop);\r\n        const pause=document.getElementById('pause');\r\n        pause.addEventListener('click',handlePause);\r\n        return ()=>{\r\n            clearInterval(interval);\r\n            play.removeEventListener('click',handlePlay);\r\n            stop.removeEventListener('click',handleStop);\r\n            pause.removeEventListener('click',handlePause);\r\n        }\r\n    },[])\r\n    function handlePlay(){\r\n        if(interval===null){\r\n            interval=setInterval(()=>savedCallback.current(),1000);\r\n        }\r\n    }\r\n    function handleStop(ev){\r\n        if(interval!==null){\r\n            clearInterval(interval);\r\n            setTime(\r\n                {\r\n                    sec:0,\r\n                    min:0,\r\n                    hours:0\r\n                }\r\n            );\r\n            interval=null;\r\n        }\r\n    }\r\n    function handlePause(ev){   \r\n        if(interval!==null){\r\n            clearInterval(interval);\r\n            interval=null;\r\n        }\r\n    }\r\n    return time;\r\n}\r\n\r\nfunction useCurrentCallback(callback){\r\n    let savedCallback=useRef();\r\n    useEffect(()=>{\r\n        savedCallback.current=callback;\r\n    })\r\n    \r\n    return savedCallback;\r\n}"],"sourceRoot":""}